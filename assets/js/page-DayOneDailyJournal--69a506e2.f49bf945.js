(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{491:function(a,e,t){"use strict";t.r(e);var s=t(2),o=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"day-one-daily-journal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-one-daily-journal"}},[a._v("#")]),a._v(" Day One Daily Journal")]),a._v(" "),t("h2",{attrs:{id:"emotions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emotions"}},[a._v("#")]),a._v(" Emotions")]),a._v(" "),t("h2",{attrs:{id:"day-one-daily-qs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-one-daily-qs"}},[a._v("#")]),a._v(" Day One Daily Qs")]),a._v(" "),t("p",[t("strong",[a._v("What is Scope?")])]),a._v(" "),t("p",[a._v("Javascript has both a local and a global scope. Let variables inside a function are not visible outside of the function. Var variables can be accessed globally.")]),a._v(" "),t("p",[t("strong",[a._v("What is Hoisting?")])]),a._v(" "),t("p",[a._v("Javascript by default moves any declarations to the top of the code; therefore a variable can be invoked before being defined.")]),a._v(" "),t("p",[t("strong",[a._v("In what cases might you use let vs const vs var?")])]),a._v(" "),t("p",[a._v("Var allows for hoisting. Let has a local scope. And const cannot be changed after set. So usually let is used, as it has a local scope.")]),a._v(" "),t("h2",{attrs:{id:"day-one-daily-project"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-one-daily-project"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"https://github.com/CMitchell5619/JavaScriptChallenges",target:"_blank",rel:"noopener noreferrer"}},[a._v("Day One Daily Project"),t("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);